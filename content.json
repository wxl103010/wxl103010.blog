{"meta":{"title":"Collection","subtitle":"wxl103010个人博客","description":"收藏了不少东西，却没个人能一起分享，很寂寞。","author":"wxl103010","url":"http://wxl103010.github.io","root":"/"},"pages":[{"title":"categories","date":"2019-12-18T17:53:52.000Z","updated":"2019-12-18T17:54:36.029Z","comments":true,"path":"categories/index.html","permalink":"http://wxl103010.github.io/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"contact","date":"2019-12-18T17:57:37.000Z","updated":"2019-12-18T17:57:51.930Z","comments":true,"path":"contact/index.html","permalink":"http://wxl103010.github.io/contact/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"about","date":"2019-12-18T17:56:13.000Z","updated":"2019-12-18T17:56:31.367Z","comments":true,"path":"about/index.html","permalink":"http://wxl103010.github.io/about/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2019-12-19T07:41:22.000Z","updated":"2019-12-19T07:42:08.559Z","comments":true,"path":"tags/index.html","permalink":"http://wxl103010.github.io/tags/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"博客主题细节修改","slug":"博客主题细节修改","date":"2019-12-19T15:51:05.000Z","updated":"2019-12-20T05:42:10.321Z","comments":true,"path":"2019/12/19/bo-ke-zhu-ti-xi-jie-xiu-gai/","link":"","permalink":"http://wxl103010.github.io/2019/12/19/bo-ke-zhu-ti-xi-jie-xiu-gai/","excerpt":"","text":"说明在使用matery主题的时候，遇到了一些问题，所以这里作些记录，把这个需要处理的问题归类一下。 配置修改注意1）修改配置时，项目帽号后面要有个空格，不然会报错。例如：enable: true 2） 修改首页标题首页正中间的标题与左上角的名字，可以在博客文件夹的_config.yml中修改title和subtitle来进行。 因为该文件的编码方式默认是ANSI，所以如果想使用中文标题，则需要修改_config.yml的编码方式。 本人使用Notepad++来修改，先打开文件，然后全选复制，接着修改文件编码方式，这时里面的内容会变为乱码，全部选中粘贴，保存即可。 开启评论系统Valine1）首先在https://leancloud.cn/这儿先进行账号注册，并且验证完成，然后创建一个应用。 2）创建好后打开应用的设置，找到应用key，保存appid和appkey。 3）在安全中心，将自己的域名，也就是博客访问地址添加到Web安全域名中。 4）打开主题设置文件_config.myl，搜索valine，将enable的值改为true，把第二步保存的内容填写到appId和appKey中。 这时便可以。这里说明一下，所有的评论数据将保存在Valine中，如果这个账号关联失效，将丢失所有评论。当然了，如果想删哪个，也可以到这里面进行删除。 开启评论系统Gitalk这个评论系统是需要登录github账号后才可以，使用的也比较多，先记录下添加步骤。 1） document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://wxl103010.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"matery","slug":"matery","permalink":"http://wxl103010.github.io/tags/matery/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://wxl103010.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"author":"wxl103010"},{"title":"为博客更换主题","slug":"为博客更换主题","date":"2019-12-19T11:46:20.000Z","updated":"2019-12-20T03:36:39.920Z","comments":true,"path":"2019/12/19/wei-bo-ke-geng-huan-zhu-ti/","link":"","permalink":"http://wxl103010.github.io/2019/12/19/wei-bo-ke-geng-huan-zhu-ti/","excerpt":"","text":"主题选择打开刚刚创建的博客可以跟别的对比一下，真心是觉得死难看，难看死了，得马上换个界面。现在网上流行的有很多，不过我个人感觉，够用、适合就好，所以我会写几个我知道试过的，还有我现在使用的这个主题。 yilia主题地址：https://github.com/litten/hexo-theme-yiliasakura主题地址：https://github.com/honjun/hexo-theme-sakurabutterfly主题地址：https://github.com/jerryc127/hexo-theme-butterfly/tree/dev matery主题地址：https://github.com/blinkfox/hexo-theme-matery 第4个是我现在正在使用的主题，暂时没感觉有什么不合适，先按这个进行书写，如果以后更新的话，会继续记录过程。 1）下载主题键入命令：git clone 主题地址.git themes/主题名称 首先呢，不是要进入文件夹根目录，也就是前文中自己创建的博客文件夹，然后再键入命令。其余主题名称最好还是按原来的名字，不要加中文。其余的主题如果进行下载也可以按这种方式。 2）修改博客配置博客文件下找到_config.yml文件，记事本打开，最下面有个theme，后面的值修改为主题名称即可。这里只要是与你下载时写书的名称一致便可以。 3）清空缓存、更新博客，最后启动或上传这时再打开博客，便可以看到新的主题大致情况，不过大部分功能依旧不能使用，所以需要继续调整。 配置主题我把主题配置的内容全部抄到下面了，根据需要照着做就行，这些只是大体上的修改，操作完后大致上才能有个博客的样子，不致于除了主页基本打不开。 切换主题修改 Hexo 根目录下的 _config.yml 的 theme 的值：theme: hexo-theme-matery _config.yml 文件的其它修改建议: 请修改 _config.yml 的 url 的值为你的网站主 URL（如：http://xxx.github.io）。 建议修改两个 per_page 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕下都能较好的显示。 如果你是中文用户，则建议修改 language 的值为 zh-CN。 新建分类 categories 页categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"categories\"编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容： --- title: categories date: 2018-09-30 17:25:30 type: \"categories\" layout: \"categories\" ---新建标签 tags 页tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"tags\"编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容： --- title: tags date: 2018-09-30 18:23:38 type: \"tags\" layout: \"tags\" ---新建关于我 about 页about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 about/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"about\"编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容： --- title: about date: 2018-09-30 17:25:30 type: \"about\" layout: \"about\" ---新建留言板 contact 页（可选的）contact 页是用来展示留言板信息的页面，如果在你的博客 source 目录下还没有 contact/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"contact\"编辑你刚刚新建的页面文件 /source/contact/index.md，至少需要以下内容： --- title: contact date: 2018-09-30 17:25:30 type: \"contact\" layout: \"contact\" ---注：本留言板功能依赖于第三方评论系统，请激活你的评论系统才有效果。并且在主题的 _config.yml 文件中，第 19 至 21 行的“菜单”配置，取消关于留言板的注释即可。 新建友情连接 friends 页（可选的）friends 页是用来展示友情连接信息的页面，如果在你的博客 source 目录下还没有 friends/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"friends\"编辑你刚刚新建的页面文件 /source/friends/index.md，至少需要以下内容： --- title: friends date: 2018-12-12 21:25:30 type: \"friends\" layout: \"friends\" ---同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示： [{ \"avatar\": \"http://image.luokangyuan.com/1_qq_27922023.jpg\", \"name\": \"码酱\", \"introduction\": \"我不是大佬，只是在追寻大佬的脚步\", \"url\": \"http://luokangyuan.com/\", \"title\": \"前去学习\" }, { \"avatar\": \"http://image.luokangyuan.com/4027734.jpeg\", \"name\": \"闪烁之狐\", \"introduction\": \"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬\", \"url\": \"https://blinkfox.github.io/\", \"title\": \"前去学习\" }, { \"avatar\": \"http://image.luokangyuan.com/avatar.jpg\", \"name\": \"ja_rome\", \"introduction\": \"平凡的脚步也可以走出伟大的行程\", \"url\": \"https://me.csdn.net/jlh912008548\", \"title\": \"前去学习\" }]菜单导航配置配置基本菜单导航的名称、路径url和图标icon.1.菜单导航名称可以是中文也可以是英文(如：Index或主页) 2.图标icon 可以在Font Awesome 中查找 menu: Index: url: / icon: fas fa-home Tags: url: /tags icon: fas fa-tags Categories: url: /categories icon: fas fa-bookmark Archives: url: /archives icon: fas fa-archive About: url: /about icon: fas fa-user-circle Friends: url: /friends icon: fas fa-address-book二级菜单配置方法如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作1.在需要添加二级菜单的一级菜单下添加children关键字(如:About菜单下添加children)2.在children下创建二级菜单的 名称name,路径url和图标icon.3.注意每个二级菜单模块前要加 -.4.注意缩进格式 menu: Index: url: / icon: fas fa-home Tags: url: /tags icon: fas fa-tags Categories: url: /categories icon: fas fa-bookmark Archives: url: /archives icon: fas fa-archive About: url: /about icon: fas fa-user-circle-o Friends: url: /friends icon: fas fa-address-book Medias: icon: fas fa-list children: - name: Musics url: /musics icon: fas fa-music - name: Movies url: /movies icon: fas fa-film - name: Books url: /books icon: fas fa-book - name: Galleries url: /galleries icon: fas fa-image执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后就可以在文章中对应位置看到你用emoji语法写的表情了。 代码高亮由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，安装命令如下： npm i -S hexo-prism-plugin然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下： highlight: enable: false prism_plugin: mode: 'preprocess' # realtime/preprocess theme: 'tomorrow' line_number: false # default false custom_css:搜索本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下： npm install hexo-generator-search --save在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： search: path: search.xml field: post中文链接转拼音（建议安装）如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 hexo-permalink-pinyin Hexo 插件使在生成文章时生成中文拼音的永久链接。 安装命令如下： npm i hexo-permalink-pinyin --save在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： permalink_pinyin: enable: true separator: '-' # default: '-'注：除了此插件外，hexo-abbrlink 插件也可以生成非中文的链接。 文章字数统计插件（建议安装）如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。 安装命令如下： npm i --save hexo-wordcount然后只需在本主题下的 _config.yml 文件中，将各个文章字数相关的配置激活即可： postInfo: date: true update: false wordCount: false # 设置文章字数统计为 true. totalCount: false # 设置站点文章总字数统计为 true. min2read: false # 阅读时长. readCount: false # 阅读次数.添加emoji表情支持（可选的）本主题新增了对emoji表情的支持，使用到了 hexo-filter-github-emojis 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：:smile:）转变成会跳跃的emoji表情，安装命令如下： npm install hexo-filter-github-emojis --save在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： githubEmojis: enable: true className: github-emoji inject: true styles: customEmojis:添加 RSS 订阅支持（可选的）本主题中还使用到了 hexo-generator-feed 的 Hexo 插件来做 RSS，安装命令如下： npm install hexo-generator-feed --save在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： feed: type: atom path: atom.xml limit: 20 hub: content: content_limit: 140 content_limit_delim: ' ' order_by: -date执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明你已经安装成功了。 添加 DaoVoice 在线聊天功能（可选的）前往 DaoVoice 官网注册并且获取 app_id，并将 app_id 填入主题的 _config.yml 文件中。 添加 Tidio 在线聊天功能（可选的）前往 Tidio 官网注册并且获取 Public Key，并将 Public Key 填入主题的 _config.yml 文件中。 修改页脚页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 /layout/_partial/footer.ejs 文件中，包括站点、使用的主题、访问量等。 修改社交链接在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱等的配置，你可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码： &lt;% if (theme.socialLink.github) { %&gt; &lt;a href=\"&lt;%= theme.socialLink.github %&gt;\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的GitHub\" data-position=\"top\" data-delay=\"50\"&gt; &lt;i class=\"fab fa-github\"&gt;&lt;/i&gt; &lt;/a&gt; &lt;% } %&gt;其中，社交图标（如：fa-github）你可以在 Font Awesome 中搜索找到。以下是常用社交图标的标识，供你参考： Facebook: fab fa-facebook Twitter: fab fa-twitter Google-plus: fab fa-google-plus Linkedin: fab fa-linkedin Tumblr: fab fa-tumblr Medium: fab fa-medium Slack: fab fa-slack Sina Weibo: fab fa-weibo Wechat: fab fa-weixin QQ: fab fa-qq Zhihu: fab fa-zhihu 注意: 本主题中使用的 Font Awesome 版本为 5.11.0。 修改打赏的二维码图片在主题文件的 source/medias/reward 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。 配置音乐播放器（可选的）要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。 首先，在你的博客 source 目录下的 _data 目录（没有的话就新建一个）中新建 musics.json 文件，文件内容如下所示： [{ \"name\": \"五月雨变奏电音\", \"artist\": \"AnimeVibe\", \"url\": \"http://xxx.com/music1.mp3\", \"cover\": \"http://xxx.com/music-cover1.png\" }, { \"name\": \"Take me hand\", \"artist\": \"DAISHI DANCE,Cecile Corbel\", \"url\": \"/medias/music/music2.mp3\", \"cover\": \"/medias/music/cover2.png\" }, { \"name\": \"Shape of You\", \"artist\": \"J.Fla\", \"url\": \"http://xxx.com/music3.mp3\", \"cover\": \"http://xxx.com/music-cover3.png\" }]注：以上 JSON 中的属性：name、artist、url、cover 分别表示音乐的名称、作者、音乐文件地址、音乐封面。 然后，在主题的 _config.yml 配置文件中激活配置即可： # 是否在首页显示音乐. music: enable: true showTitle: false title: 听听音乐 fixed: false # 是否开启吸底模式 autoplay: false # 是否自动播放 theme: '#42b983' loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none' order: 'list' # 音频循环顺序, 可选值: 'list', 'random' preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: false # 列表默认折叠 listMaxHeight: # 列表最大高度文章 Front-matter 介绍Front-matter 选项详解Front-matter 选项中的所有内容均为非必填的。但我仍然建议至少填写 title 和 date 的值。 配置选项 默认值 描述 title Markdown 的文件标题 文章标题，强烈建议填写此选项 date 文件创建时的日期时间 发布时间，强烈建议填写此选项，且最好保证全局唯一 author 根 _config.yml 中的 author 文章作者 img featureImages 中的某个值 文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: http://xxx.com/xxx.jpg top true 推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章 cover false v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中 coverImg 无 v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片 password 无 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项 toc true 是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项 mathjax false 是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行 summary 无 文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 categories 无 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类 tags 无 文章标签，一篇文章可以多个标签 keywords 文章标题 文章关键字，SEO 时需要 reprintPolicy cc_by 文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个 注意: 如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。 date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。 如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。 您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则以下为文章的 Front-matter 示例。 最简示例 --- title: typora-vue-theme主题介绍 date: 2018-09-07 09:25:00 ---最全示例 --- title: typora-vue-theme主题介绍 date: 2018-09-07 09:25:00 author: 赵奇 img: /source/images/xxx.jpg top: true cover: true coverImg: /images/1.jpg password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 toc: false mathjax: false summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 categories: Markdown tags: - Typora - Markdown ---自定制修改在本主题的 _config.yml 中可以修改部分自定义信息，有以下几个部分： 菜单 我的梦想 首页的音乐播放器和视频播放器配置 是否显示推荐文章名称和按钮配置 favicon 和 Logo 个人信息 TOC 目录 文章打赏信息 复制文章内容时追加版权信息 MathJax 文章字数统计、阅读时长 点击页面的’爱心’效果 我的项目 我的技能 我的相册 Gitalk、Gitment、Valine 和 disqus 评论配置 不蒜子统计和谷歌分析（Google Analytics） 默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图 我认为个人博客应该都有自己的风格和特色。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 _config.yml 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方： 修改主题颜色在主题文件的 /source/css/matery.css 文件中，搜索 .bg-color 来修改背景颜色： /* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */ .bg-color { background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); } @-webkit-keyframes rainbow { /* 动态切换背景颜色. */ } @keyframes rainbow { /* 动态切换背景颜色. */ }修改 banner 图和文章特色图你可以直接在 /source/medias/banner 文件夹中更换你喜欢的 banner 图片，主题代码中是每天动态切换一张，只需 7 张即可。如果你会 JavaScript 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，banner 切换的代码位置在 /layout/_partial/bg-cover-content.ejs 文件的 代码中： $('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');在 /source/medias/featureimages 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 _config.yml 做同步修改。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://wxl103010.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"matery","slug":"matery","permalink":"http://wxl103010.github.io/tags/matery/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://wxl103010.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"author":"wxl103010"},{"title":"搭建个人博客","slug":"搭建个人博客","date":"2019-12-18T19:19:12.000Z","updated":"2019-12-20T03:36:22.839Z","comments":true,"path":"2019/12/19/da-jian-ge-ren-bo-ke/","link":"","permalink":"http://wxl103010.github.io/2019/12/19/da-jian-ge-ren-bo-ke/","excerpt":"","text":"1、环境部署在电脑中想得到一些结果，必须有程序来帮忙进行处理，所以这边需要提前准备安装的程序有两个软件git和Node.js，来帮助进行处理相关事宜。 git下载地址：https://git-scm.com/downloads Node.js下载地址：https://nodejs.org/en/ Windows安装这个操作其实就很简单了，打开下载地址，然后选择Windows版本，下载后打开使用默认安装即可。 关于64或32位的问题，需要看操作系统是哪个，不过现在一般都是64位的系统了。 Linux安装这个的话就稍麻烦一些，其实是不复杂的。主要是使用好相关命令就行，再一个就是所下载的地址不要弄错了。 1）键入命令yum -y install git，等待完成后，再输入命令git -v，这时没有报错，而出现版本号，便是git安装成功。 2）键入命令wget 下载地址，其中的下载地址，可以从官网中找到，右击复制链接即可，成功后可通过命令ls查看到所下载的文件。 3）接着输入两条命令xz -d 文件名和tar -xvf 文件名，这时便可以看到已经解压后的文件夹。 4）创建node快捷方式，键入命令ln -s /root/文件夹名/bin/node /usr/local/bin/node。 5）创建 npm快捷方式，键入命令ln -s /root/文件夹名/bin/npm /usr/local/bin/npm。 6）通过使用参加-v来检查是否能查询到node和npm的版本号，可以即安装完成。 2、安装框架这里我根据网上的教程，使用的是hexo，现在操作这些都已经非常的简单了，键入命令npm install -g hexo-cli，等待下载完成即可。 Windows版本下载完成即可使用，如果是Linux则需要再次创建快捷方式，键入命令ln -s /root/文件夹名/bin/hexo /usr/local/bin/hexo。 最后仍然是通过-v来检查是否能查看版本号。 3、生成博客1）新建文件夹 Windows中找一个地方创建一个文件夹，例如在D盘中创建blog文件夹，用于存放博客的所有文件。该文件中保存着与博客相关的所有文件，如果博客在创建过程中出现问题，可以直接删除文件然后重新创建，没有任何影响。 Linux中创建的话使用命令mkdir来进行创建，独立度与Windows中一样。 2）进入文件夹 这个时候最好是使用命令行来进行进入，Linux中很简单，直接cd blog即可，Windows中需要运行cmd，然后出现的黑色界面中，输入d:，先切换到D盘，然后输入cd blog。 3）初始化博客 键入命令hexo init。 4）启动博客 键入命令hexo s，其中的s是缩写，也可以写全hexo server。这时随便打开一个浏览器，输入地址http://localhost:4000/，便可以看到刚刚建好的博客。 将刚才输入命令的黑色窗口关闭后，博客也会随之关闭。继续查看步骤照上。 有时候打开后发现有些改变没有生效，那就是启动前要更新一下，使用命令hexo clean和hexo g，接着启动便可以了。 4、部署到github中因为现在为止博客只是在我们的电脑中，要想让其他人也能看到，那就需要添加到公共区域中，常规的方法是将自己的电脑一直开启博客，然后使用域名，电脑可以换成云服务器，但这样成本就增加了，所以根据当前我查到的信息，可以先将博客传到github中，这样只需要做好上传就行了，其余的基本就可以暂时不用考虑。 1）github官网：https://github.com/login 2）先在github官网中进行账号注册。 3）注册好后进入主页，然后在右上方的菜单中选择”New repository“，意思是创建仓库。 4）接下来出现的界面，主要是将仓库地址确定一下，格式要按照”自定义.github.io“来书写，具体原因我还没查，至少我试过一个结果是不能访问的。 5）打开电脑中的命令界面，输入npm install --save hexo-deployer-git，这个是安装git部署插件。 6）在博客的文件夹中，也就是前面自己创建的文件夹中，找到_config.yml文件，然后用记事本打开，找到“Deployment”，将下面的内容改为“type: git”、“repo: git仓库地址”，然后再添加一行“branch: master”。 其中git仓库地址，不是前面添加仓库时写的地址，而是添加好后，进入仓库界面看到的一个地址，地址后面以git结尾。 7）这时便可以上传了，依旧照上面的方式，在命令行进入自己创建的文件夹，然后键入命令hexo d，这时系统便会自动将做好的博客上传到github的仓库中。 第一次上传时，会要求填写github的登录账号和密码，这是正常情况。 8）上传完毕后，使用自己书写的仓库地址，便能访问刚刚上传的博客了。例如：http://wxl103010.github.io 5、多余操作本人是个非常懒的人，所以以上的步骤中经常得更新、上传、启动，非常的麻烦，我在网上找了找办法，做几个批处理，便可以暂时解决这些问题了。 使用的办法是做批处理文件，提前写好命令后，到时候直接点击，便会自动操作，再也不需要一点一点来了。下面就是我写的脚本内容。相关的地址可以根据实际的情况来修改，命令也可以按需要进行调整。 1）更新并本地启动博客 @echo off d: cd d:\\blog echo \"清空缓存\" &amp;&amp; hexo clean &amp;&amp; echo \"更新博客\" &amp;&amp; hexo g &amp;&amp; echo 登录地址：http://localhost:4000 &amp;&amp; echo 关闭本窗口即可关闭本地微博 &amp;&amp; hexo s2）更新并上传至github @echo off d cd d:\\blo echo \"清空缓存\" &amp;&amp; hexo clean &amp;&amp; echo \"更新博客\" &amp;&amp; hexo g &amp;&amp; echo \"上传至github中\" &amp;&amp; hexo d3）直接进入博客根目录命令行 @echo off d: cd d:\\blog cmd /k echo. document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://wxl103010.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://wxl103010.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"hexo","slug":"hexo","permalink":"http://wxl103010.github.io/tags/hexo/"}],"author":"wxl103010"}]}